// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  name       String
  email      String   @unique
  password   String
  role       Role     @default(USER) // agora usando enum
  refreshToken   String?  // Token de atualização opcional
  refreshTokenExpiresAt  DateTime? // opcional
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}

  model Product {
  id          Int       @id @default(autoincrement())
  code        String       @unique
  name        String
  description String?
  price       Float
  imgUrl      String?
  stock       Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  categoryId  Int
  category    Category  @relation(fields: [categoryId], references: [id])

  recipe      Recipe?
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  type     String
  products Product[]
}

model Ingredient {
  id       Int      @id @default(autoincrement())
  name     String   @unique
  unitPrice Float
  items    RecipeItem[]
}

model Recipe {
  id         Int         @id @default(autoincrement())
  productId  Int         @unique    // ✅ Torna o relacionamento 1:1 válido
  product    Product     @relation(fields: [productId], references: [id])
  items      RecipeItem[]
  createdAt  DateTime    @default(now())
}


model RecipeItem {
  id          Int        @id @default(autoincrement())
  recipeId    Int
  ingredientId Int
  quantity    Float
  recipe      Recipe     @relation(fields: [recipeId], references: [id])
  ingredient  Ingredient @relation(fields: [ingredientId], references: [id])

  @@unique([ingredientId, recipeId]) // Garante que o mesmo ingrediente não possa ser adicionado mais de uma vez na mesma receita
}